.. vim: ft=rst sts=2 sw=2 tw=77

.. :Author: Roman Neuhauser
.. :Contact: neuhauser+git-mailz@sigpipe.cz
.. :Copyright: This document is in the public domain.

.. this file is marked up using reStructuredText
   lines beginning with ".." are reST directives
   "foo_" or "`foo bar`_" is a link, defined at ".. _foo" or ".. _foo bar"
   "::" introduces a literal block (usually some form of code)
   "`foo`" is some kind of identifier
   suspicious backslashes in the text ("`std::string`\s") are required for
   reST to recognize the preceding character as syntax

.. default-role:: strong
.. parsed-literal::

  `NAME`
       `git-mailz` â€” Send a collection of patches as emails


  `SYNOPSIS`
       `git-mailz` [-f *ENVELOPE-SENDER*] [*FILE* | *DIRECTORY*]...

  `DESCRIPTION`
       Feeds patches given on the command line to *sendmail(1)*.
       Arguments can name individual patch files or directories,
       and are expected to be complete email messages.
       Recipients and sender are picked up from headers.

  `ENVIRONMENT`
       `GIT_MAILZ_SENDMAIL`
         Executable used in place of *sendmail(1)*.  Defaults to `sendmail`.

       `git-mailz` is implemented in terms of third-party commands which
       use environment variables.  This means `git-mailz` may be influenced
       by environment variables used by *git(1)*, *zsh(1)*, possibly others.

  `DIAGNOSTICS`
       The `git-mailz` utility exits 0 on success, and >0 if an error occurs.

  `SEE ALSO`
       *git-format-patch(1)*, *git-send-email(1)*, *sendmail(1)*,
       *sendmail(8)*.

  `AUTHORS`
       Roman Neuhauser <neuhauser+git-mailz@sigpipe.cz>
           https://github.com/roman-neuhauser/git-mailz/

  `BUGS`
       No doubt plentiful.  Please report them at
           https://github.com/roman-neuhauser/git-mailz/issues

